{
    // ---------------- Color scheme/Font ---------------- 
    "editor.fontFamily": "'Lilex Nerd Font Mono', Consolas, 'Courier New', monospace",
    "workbench.colorTheme": "Catppuccin Mocha",
    "catppuccin.accentColor": "peach",
    "catppuccin.colorOverrides": {
        "mocha": {
            "base": "#202021",
            "mantle": "#1f1f1f",
            "crust": "#1a1a1a",
        },
    },

    // Enable Vim status bar color control if using the Vim extension
    "workbench.colorCustomizations": {
        "statusBar.background": "#1f1f1f",
        "statusBar.noFolderBackground": "#1f1f1f",
        "statusBar.debuggingBackground": "#1f1f1f",
        "statusBar.foreground": "#ffffff",
        "statusBar.debuggingForeground": "#ffffff"
    },

    // ---------------- Vim ---------------- 

    "vim.leader": " ",

    // Disable handling of keys for left-side menu navagation
    "vim.handleKeys": {
        "<C-f>": false,
        "<C-g>": false,
        "<C-q>": false,
        "<C-x>": false,
        "<C-l>": false,
        "<C-z>": false,
        "<C-enter>": false
    },

    "vim.normalModeKeyBindings": [
        // Open quickswitcher
        {
            "before": ["<leader>", "f", "d"],
            "commands": ["workbench.action.quickOpen"]
        },
        // Open a new blank tab
        {
            "before": ["<leader>", "n"],
            "commands": ["workbench.action.files.newUntitledFile"]
        },
        // Move to the next tab
        {
            "before": ["<leader>", "<leader>"],
            "commands": ["workbench.action.nextEditorInGroup"]
        },
        // Close the current tab
        {
            "before": ["<leader>", "c"],
            "commands": ["workbench.action.closeActiveEditor"]
        },
        // Open specific tabs (1st to 9th)
        {
            "before": ["<leader>", "1"],
            "commands": ["workbench.action.openEditorAtIndex1"]
        },
        {
            "before": ["<leader>", "2"],
            "commands": ["workbench.action.openEditorAtIndex2"]
        },
        {
            "before": ["<leader>", "3"],
            "commands": ["workbench.action.openEditorAtIndex3"]
        },
        {
            "before": ["<leader>", "4"],
            "commands": ["workbench.action.openEditorAtIndex4"]
        },
        {
            "before": ["<leader>", "5"],
            "commands": ["workbench.action.openEditorAtIndex5"]
        },
        {
            "before": ["<leader>", "6"],
            "commands": ["workbench.action.openEditorAtIndex6"]
        },
        {
            "before": ["<leader>", "7"],
            "commands": ["workbench.action.openEditorAtIndex7"]
        },
        {
            "before": ["<leader>", "8"],
            "commands": ["workbench.action.openEditorAtIndex8"]
        },
        {
            "before": ["<leader>", "9"],
            "commands": ["workbench.action.openEditorAtIndex9"]
        },
        // Yank the current line to the system clipboard
        {
            "before": ["Y", "Y"],
            "after": ["\"", "+", "y", "y"]
        },
        // Navigate to marker
        {
            "before": ["g", "m"],
            "after": ["`"]
        },
        // Go to next/previous diagnostics
        {
            "before": ["]", "d"],
            "commands": ["editor.action.marker.nextInFiles"],
            "silent": true
        },
        {
            "before": ["[", "d"],
            "commands": ["editor.action.marker.prevInFiles"],
            "silent": true
        },
        // Go to next/previous search result
        {
            "before": ["[", "s"],
            "commands": ["search.action.focusPreviousSearchResult"]
        },
        {
            "before": ["]", "s"],
            "commands": ["search.action.focusNextSearchResult"]
        },
        {
            // Toggle breakpoint
            "before": ["<leader>", "d", "b"],
            "commands": ["editor.debug.action.toggleBreakpoint"]
        },
        {
            // Peek definition
            "before": ["g", "p", "d"],
            "commands": ["editor.action.peekDefinition"]
        },
        {
            "before": ["g", "h"],
            "commands": ["editor.action.showDefinitionPreviewHover"]
        },
        {
            "before": ["g", "i"],
            "commands": ["editor.action.goToImplementation"]
        },
        {
            "before": ["g", "p", "i"],
            "commands": ["editor.action.peekImplementation"]
        },
        {
            "before": ["g", "q"],
            "commands": ["editor.action.quickFix"]
        },
        {
            // Go to references
            "before": ["g", "r"],
            "commands": ["editor.action.referenceSearch.trigger"]
        },
        {
            "before": ["g", "t"],
            "commands": ["editor.action.goToTypeDefinition"]
        },
        {
            "before": ["g", "p", "t"],
            "commands": ["editor.action.peekTypeDefinition"]
        },
        {
            // Rename
            "before": ["<leader>", "r", "n"],
            "commands": ["editor.action.rename"]
        },
        {
            // Format document
            "before": ["<leader>", "g", "f"],
            "commands": ["editor.action.formatDocument"]
        }
    ],

    "vim.insertModeKeyBindings": [
        { "before": ["j", "j"], "after": ["<Esc>"] },
        { "before": ["q", "q"], "after": ["<C-o>", "<End>"] }
    ],

    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": ["Y"],
            "after": ["\"", "+", "y"]
        },
        {
            "before": ["t"],
            "commands": ["flip.selection"]
        }
    ],

    // ---------------- Misc ---------------- 
    "cmake.showOptionsMovedNotification": false,
    "cmake.pinnedCommands": [
        "workbench.action.tasks.configureTaskRunner",
        "workbench.action.tasks.runTask"
    ],
    "workbench.editor.enablePreview": true,
    "workbench.editor.enablePreviewFromCodeNavigation": true,
    "workbench.editor.enablePreviewFromQuickOpen": true,
    "workbench.editor.revealIfOpen": true,
    "security.allowedUNCHosts": [
        "wsl.localhost"
    ],
    "explorer.confirmDelete": false,
    "security.workspace.trust.untrustedFiles": "open",
    "cmake.buildDirectory": "${workspaceFolder}/cmake-build",
    "window.openFilesInNewWindow": "off",
    "vscode-serial-monitor.loggingVerbosity": "debug",
    "vscode-serial-monitor.logFileDirectory": "${workspaceRoot}/log"
}