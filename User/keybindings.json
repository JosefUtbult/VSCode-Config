[
    {
        // Toggle Explorer view with Ctrl+N when NOT in the Search panel
        "key": "ctrl+n",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "sideBarVisible && activeViewlet == 'workbench.view.explorer' && !searchViewletVisible"
    },
    {
        // Open Explorer with Ctrl+N when NOT in the Search panel
        "key": "ctrl+n",
        "command": "workbench.view.explorer",
        "when": "!sideBarVisible || (activeViewlet != 'workbench.view.explorer' && !searchViewletVisible)"
    },
    {
        // Toggle Search view with Ctrl+F
        "key": "ctrl+f",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "sideBarVisible && activeViewlet == 'workbench.view.search'"
    },
    {
        "key": "ctrl+f",
        "command": "workbench.view.search",
        "when": "!sideBarVisible || activeViewlet != 'workbench.view.search'"
    },
    {
        // Toggle Source Control view with Ctrl+G
        "key": "ctrl+g",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "sideBarVisible && activeViewlet == 'workbench.view.scm'"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.view.scm",
        "when": "!sideBarVisible || activeViewlet != 'workbench.view.scm'"
    },
    {
        // Toggle Debug view with Ctrl+D
        "key": "ctrl+q",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "sideBarVisible && activeViewlet == 'workbench.view.debug'"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.view.debug",
        "when": "!sideBarVisible || activeViewlet != 'workbench.view.debug'"
    },
    {
        // Toggle Extensions view with Ctrl+X
        "key": "ctrl+x",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "sideBarVisible && activeViewlet == 'workbench.view.extensions'"
    },
    {
        "key": "ctrl+x",
        "command": "workbench.view.extensions",
        "when": "!sideBarVisible || activeViewlet != 'workbench.view.extensions'"
    },
    {
        // Toggle Problems view with Ctrl+Z
        "key": "ctrl+z",
        "command": "workbench.actions.view.problems",
        "when": "panelVisible && activePanel == 'workbench.panel.markers'"
    },
    {
        "key": "ctrl+z",
        "command": "workbench.panel.markers.view.focus",
        "when": "!panelVisible || activePanel != 'workbench.panel.markers'"
    },
    {
        // Toggle Output view with Ctrl+L, without changing focus
        "key": "ctrl+l",
        "command": "workbench.action.output.toggleOutput"
    },
    {
        // Toggle Terminal with Ctrl+Enter
        "key": "ctrl+enter",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "panelVisible && activePanel == 'workbench.panel.terminal'"
    },
    {
        "key": "ctrl+enter",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "!panelVisible || activePanel != 'workbench.panel.terminal'"
    },
    // Vim navigation in quick select
    {
        "key": "ctrl+n",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    // Vim navigation in search menu
    {
        // Go to the next search result with ]s
        "key": "] s",
        "command": "search.action.focusNextSearchResult",
        "when": "searchViewletVisible && searchViewletFocus"
    },
    {
        // Go to the previous search result with [s
        "key": "[ s",
        "command": "search.action.focusPreviousSearchResult",
        "when": "searchViewletVisible && searchViewletFocus"
    },
    {
        "key": "ctrl+shift+t",
        "command": "-workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.tasks.runTask"
    },
    {
        "key": "ctrl+shift+alt+b",
        "command": "workbench.action.tasks.runTask",
        "args": "Make Debug and Load ELF"
    }
]